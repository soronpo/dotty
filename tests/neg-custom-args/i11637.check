-- [E057] Type Mismatch Error: tests/neg-custom-args/i11637.scala:11:33 ------------------------------------------------
11 |  var h = new HKT3_1[FunctorImpl]();  // error // error
   |                                 ^
   |                 Type argument test2.FunctorImpl does not conform to upper bound [Generic2[T] <: Set[T]] =>> Any

Explanation
===========

I tried to show that
  test2.FunctorImpl
conforms to
  [Generic2[T] <: Set[T]] =>> Any
but the comparison trace ended with `false`:
          
  ==> test2.FunctorImpl  <:  [Generic2[T] <: Set[T]] =>> Any
    ==> test2.FunctorImpl  <:  [Generic2[T] <: Set[T]] =>> Any (recurring)
      ==> type bounds [[T] <: Set[T]]  <:  type bounds [[T] <: Iterable[T]]
        ==> type bounds [[T] <: Set[T]]  <:  type bounds [[T] <: Iterable[T]] (recurring)
          ==> [T <: String] =>> Set[T]  <:  Iterable
            ==> [T <: String] =>> Set[T]  <:  Iterable (recurring)
              ==> type bounds []  <:  type bounds [ <: String]
                ==> type bounds []  <:  type bounds [ <: String] (recurring)
                  ==> Any  <:  String
                    ==> Any  <:  String (recurring)
                      ==> Any  <:  String (recurring)
                      <== Any  <:  String (recurring) = false
                    <== Any  <:  String (recurring) = false
                  <== Any  <:  String = false
                <== type bounds []  <:  type bounds [ <: String] (recurring) = false
              <== type bounds []  <:  type bounds [ <: String] = false
            <== [T <: String] =>> Set[T]  <:  Iterable (recurring) = false
          <== [T <: String] =>> Set[T]  <:  Iterable = false
        <== type bounds [[T] <: Set[T]]  <:  type bounds [[T] <: Iterable[T]] (recurring) = false
      <== type bounds [[T] <: Set[T]]  <:  type bounds [[T] <: Iterable[T]] = false
    <== test2.FunctorImpl  <:  [Generic2[T] <: Set[T]] =>> Any (recurring) = false
  <== test2.FunctorImpl  <:  [Generic2[T] <: Set[T]] =>> Any = false

The tests were made under the empty constraint

-- [E057] Type Mismatch Error: tests/neg-custom-args/i11637.scala:11:21 ------------------------------------------------
11 |  var h = new HKT3_1[FunctorImpl]();  // error // error
   |                     ^
   |                 Type argument test2.FunctorImpl does not conform to upper bound [Generic2[T] <: Set[T]] =>> Any

Explanation
===========

I tried to show that
  test2.FunctorImpl
conforms to
  [Generic2[T] <: Set[T]] =>> Any
but the comparison trace ended with `false`:
          
  ==> test2.FunctorImpl  <:  [Generic2[T] <: Set[T]] =>> Any
    ==> test2.FunctorImpl  <:  [Generic2[T] <: Set[T]] =>> Any (recurring)
      ==> type bounds [[T] <: Set[T]]  <:  type bounds [[T] <: Iterable[T]]
        ==> type bounds [[T] <: Set[T]]  <:  type bounds [[T] <: Iterable[T]] (recurring)
          ==> [T <: String] =>> Set[T]  <:  Iterable
            ==> [T <: String] =>> Set[T]  <:  Iterable (recurring)
              ==> type bounds []  <:  type bounds [ <: String]
                ==> type bounds []  <:  type bounds [ <: String] (recurring)
                  ==> Any  <:  String
                    ==> Any  <:  String (recurring)
                      ==> Any  <:  String (recurring)
                      <== Any  <:  String (recurring) = false
                    <== Any  <:  String (recurring) = false
                  <== Any  <:  String = false
                <== type bounds []  <:  type bounds [ <: String] (recurring) = false
              <== type bounds []  <:  type bounds [ <: String] = false
            <== [T <: String] =>> Set[T]  <:  Iterable (recurring) = false
          <== [T <: String] =>> Set[T]  <:  Iterable = false
        <== type bounds [[T] <: Set[T]]  <:  type bounds [[T] <: Iterable[T]] (recurring) = false
      <== type bounds [[T] <: Set[T]]  <:  type bounds [[T] <: Iterable[T]] = false
    <== test2.FunctorImpl  <:  [Generic2[T] <: Set[T]] =>> Any (recurring) = false
  <== test2.FunctorImpl  <:  [Generic2[T] <: Set[T]] =>> Any = false

The tests were made under the empty constraint
